import Item from './item.js';

export default class Map {
    constructor(id, game) {
        this.id = id;
        this.game = game;
        this.gameContainer = document.getElementById('game-container');
        this.gameWrapper = document.getElementById('game-wrapper');
        this.mapData = this.getMapData(id);
        this.items = [];
        
        // √Åp d·ª•ng thu·ªôc t√≠nh map
        this.applyMapProperties();
        
        // T·∫°o c√°c item cho map
        this.createItems();
        
        // T·∫°o menu map
        this.createMapMenu();
    }
    
    getMapData(id) {
        const maps = {
            // Map 1 - M·∫∑c ƒë·ªãnh
            1: {
                width: 5746,
                height: 2160,
                backgroundImage: 'assets/images/background2.jpg',
                playerStartX: 5746 / 2,
                playerStartY: 2160 / 2 + 300,
                boundaries: {
                    left: 0,
                    right: 5746
                },
                messages: [
                    "ƒê·∫øn ƒë√¢y r·ªìi!",
                    "T√¥i ƒëang di chuy·ªÉn!",
                    "Th·∫≠t th√∫ v·ªã!",
                    "ƒêi ƒë·∫øn ƒë√≥!",
                    "Ch·ªó n√†y tr√¥ng ƒë·∫πp ƒë·∫•y!"
                ],
                items: [
                    {
                        id: 'key1',
                        name: 'Ch√¨a kh√≥a v√†ng',
                        x: 1000,
                        y: 1500,
                        width: 80,
                        height: 80,
                        image: 'assets/images/items/key.png',
                        clickMessage: 'B·∫°n ƒë√£ nh·∫∑t ƒë∆∞·ª£c Ch√¨a kh√≥a v√†ng!'
                    },
                    {
                        id: 'scroll1',
                        name: 'Cu·ªôn gi·∫•y c·ªï',
                        x: 4000,
                        y: 1400,
                        width: 60,
                        height: 100,
                        image: 'assets/images/items/scroll.png',
                        clickMessage: 'B·∫°n ƒë√£ t√¨m th·∫•y m·ªôt cu·ªôn gi·∫•y c·ªï v·ªõi nh·ªØng ghi ch√∫ b√≠ ·∫©n!'
                    }
                ]
            },
            // Map 2
            2: {
                width: 7680,
                height: 2160,
                backgroundImage: 'assets/images/background.jpg',
                playerStartX: 7680/2,
                playerStartY: 2160 / 2 + 400,
                boundaries: {
                    left: 0,
                    right: 7680
                },
                messages: [
                    "Map th·ª© 2!",
                    "Phong c·∫£nh ƒë·∫πp qu√°!",
                    "C√πng kh√°m ph√° n√†o!",
                    "Ch·ªó n√†y l√† ƒë√¢u nh·ªâ?",
                    "Tuy·ªát v·ªùi!"
                ],
                items: [
                    {
                        id: 'gem1',
                        name: 'Vi√™n ng·ªçc xanh',
                        x: 2500,
                        y: 1300,
                        width: 70,
                        height: 70,
                        image: 'assets/images/items/gem-blue.png',
                        clickMessage: 'B·∫°n ƒë√£ nh·∫∑t ƒë∆∞·ª£c Vi√™n ng·ªçc xanh! N√≥ l·∫•p l√°nh √°nh s√°ng k·ª≥ di·ªáu.'
                    },
                    {
                        id: 'map1',
                        name: 'B·∫£n ƒë·ªì c·ªï',
                        x: 5800,
                        y: 1500,
                        width: 120,
                        height: 90,
                        image: 'assets/images/items/map.png',
                        clickMessage: 'M·ªôt b·∫£n ƒë·ªì c·ªï! C√≥ v·∫ª nh∆∞ n√≥ ch·ªâ ƒë∆∞·ªùng ƒë·∫øn m·ªôt kho b√°u.'
                    },
                    {
                        id: 'potion1',
                        name: 'B√¨nh thu·ªëc ƒë·ªè',
                        x: 1200,
                        y: 1600,
                        width: 50,
                        height: 80,
                        image: 'assets/images/items/potion-red.png',
                        clickMessage: 'B·∫°n ƒë√£ nh·∫∑t ƒë∆∞·ª£c B√¨nh thu·ªëc ƒë·ªè! D√πng trong tr∆∞·ªùng h·ª£p kh·∫©n c·∫•p.'
                    }
                ]
            },
            // Map 3
            3: {
                width: 7680,
                height: 2160,
                backgroundImage: 'assets/images/background3.jpg',
                playerStartX: 7680/2,
                playerStartY: 2160 / 2 + 250,
                boundaries: {
                    left: 0,
                    right: 7680
                },
                messages: [
                    "Map cu·ªëi c√πng!",
                    "ƒê√¢y l√† n∆°i th√∫ v·ªã!",
                    "H√†nh tr√¨nh k·∫øt th√∫c!",
                    "C·∫£nh ƒë·∫πp qu√°!",
                    "Th·∫≠t tuy·ªát v·ªùi!"
                ],
                items: [
                    {
                        id: 'crown1',
                        name: 'V∆∞∆°ng mi·ªán ho√†ng gia',
                        x: 3800,
                        y: 1200,
                        width: 100,
                        height: 100,
                        image: 'assets/images/items/crown.png',
                        clickMessage: 'B·∫°n ƒë√£ t√¨m th·∫•y V∆∞∆°ng mi·ªán ho√†ng gia! ƒê√¢y l√† m·ªôt b√°u v·∫≠t qu√Ω gi√°.'
                    },
                    {
                        id: 'sword1',
                        name: 'Thanh ki·∫øm huy·ªÅn tho·∫°i',
                        x: 1500,
                        y: 1400,
                        width: 120,
                        height: 150,
                        image: 'assets/images/items/sword.png',
                        clickMessage: 'Thanh ki·∫øm huy·ªÅn tho·∫°i! Ng∆∞·ªùi ta ƒë·ªìn r·∫±ng n√≥ t·ª´ng thu·ªôc v·ªÅ m·ªôt anh h√πng vƒ© ƒë·∫°i.'
                    }
                ]
            }
        };
        
        return maps[id] || maps[1]; // M·∫∑c ƒë·ªãnh tr·∫£ v·ªÅ map 1 n·∫øu id kh√¥ng t·ªìn t·∫°i
    }
    
    applyMapProperties() {
        // Thi·∫øt l·∫≠p thu·ªôc t√≠nh CSS cho container
        this.gameContainer.style.width = `${this.mapData.width}px`;
        this.gameContainer.style.height = `${this.mapData.height}px`;
        this.gameContainer.style.backgroundImage = `url('${this.mapData.backgroundImage}')`;
    }
    
    createItems() {
        // X√≥a items c≈© n·∫øu c√≥
        this.clearItems();
        
        // T·∫°o c√°c items m·ªõi t·ª´ map data
        if (this.mapData.items && this.mapData.items.length > 0) {
            this.mapData.items.forEach(itemData => {
                // Ki·ªÉm tra xem item ƒë√£ ƒë∆∞·ª£c thu th·∫≠p ch∆∞a
                if (!this.game.inventory || !this.game.inventory.hasItem(itemData.id)) {
                    const item = new Item({
                        ...itemData,
                        game: this.game
                    });
                    this.items.push(item);
                }
            });
        }
    }
    
    clearItems() {
        // X√≥a t·∫•t c·∫£ c√°c items hi·ªán c√≥ kh·ªèi DOM
        this.items.forEach(item => {
            if (item.element && item.element.parentNode) {
                item.element.remove();
            }
        });
        
        // ƒê·∫∑t l·∫°i m·∫£ng items
        this.items = [];
    }
    
    getWidth() {
        return this.mapData.width;
    }
    
    getHeight() {
        return this.mapData.height;
    }
    
    getPlayerStartX() {
        return this.mapData.playerStartX;
    }
    
    getPlayerStartY() {
        return this.mapData.playerStartY;
    }
    
    getBoundaries() {
        return this.mapData.boundaries;
    }
    
    getMessages() {
        return this.mapData.messages;
    }
    
    createMapControls() {
        // T·∫°o UI ƒëi·ªÅu khi·ªÉn chuy·ªÉn map
        const mapControls = document.createElement('div');
        mapControls.className = 'map-controls';
        
        for (let i = 1; i <= 3; i++) {
            const button = document.createElement('button');
            button.textContent = `Map ${i}`;
            button.addEventListener('click', (e) => {
                // NgƒÉn ch·∫∑n s·ª± ki·ªán click lan truy·ªÅn ƒë·∫øn game container
                e.stopPropagation();
                this.changeMap(i);
            });
            mapControls.appendChild(button);
        }
        
        this.gameWrapper.appendChild(mapControls);
    }
    
    createMapMenu() {
        // T·∫°o n√∫t map menu
        const mapButton = document.createElement('button');
        mapButton.className = 'audio-control map-menu-button';
        mapButton.textContent = 'üó∫Ô∏è';
        mapButton.style.left = '80px'; // ƒê·∫∑t b√™n ph·∫£i n√∫t √¢m thanh
        
        // T·∫°o dropdown menu
        const mapDropdown = document.createElement('div');
        mapDropdown.className = 'map-dropdown';
        
        // T·∫°o c√°c m·ª•c menu cho t·ª´ng map
        for (let i = 1; i <= 3; i++) {
            const mapItem = document.createElement('button');
            mapItem.className = 'map-item';
            mapItem.textContent = `Map ${i}`;
            mapItem.addEventListener('click', (e) => {
                e.stopPropagation(); // NgƒÉn lan truy·ªÅn s·ª± ki·ªán
                this.changeMap(i);
                mapDropdown.classList.remove('show'); // ƒê√≥ng dropdown sau khi ch·ªçn
            });
            mapDropdown.appendChild(mapItem);
        }
        
        // Th√™m s·ª± ki·ªán click ƒë·ªÉ hi·ªán/·∫©n dropdown
        mapButton.addEventListener('click', (e) => {
            e.stopPropagation(); // NgƒÉn click lan truy·ªÅn ƒë·∫øn game wrapper
            mapDropdown.classList.toggle('show');
        });
        
        // ƒê√≥ng dropdown khi click ra ngo√†i
        document.addEventListener('click', () => {
            mapDropdown.classList.remove('show');
        });
        
        // Th√™m c√°c ph·∫ßn t·ª≠ v√†o DOM
        mapButton.appendChild(mapDropdown);
        this.gameWrapper.appendChild(mapButton);
    }
    
    changeMap(mapId) {
        if (this.id !== mapId) {
            this.game.changeMap(mapId);
        }
    }
} 